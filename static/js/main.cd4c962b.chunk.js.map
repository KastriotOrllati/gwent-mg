{"version":3,"sources":["Components/FindCard/FindCard.component.jsx","Components/StaticCard/StaticCard.component.jsx","Components/MemoryBoard/MemoryBoard.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["FindCard","props","art","className","src","preload","autoPlay","loop","muted","width","height","StaticCard","cardback","alt","MemoryBoard","firstCard","secondCard","useState","startGame","setStartGame","lockBoard","hasFlippedCard","count","flipCard","this","classList","add","isMatch","dataset","framework","removeEventListener","resetBoard","setTimeout","remove","unflipCards","checkForMatch","console","log","document","querySelectorAll","forEach","card","addEventListener","useLayoutEffect","cards","localStorage","getAllCards","Object","keys","map","key","i","Fragment","Math","floor","random","keyz","App","setItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cd4c962b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./FindCard.css\";\r\n\r\nfunction FindCard(props) {\r\n  const art = props.art;\r\n  return (\r\n    <video\r\n      className=\"front-face\"\r\n      src={`img/video/${art}`}\r\n      preload=\"true\"\r\n      autoPlay\r\n      loop\r\n      muted\r\n      width=\"128\"\r\n      height=\"190\"\r\n    ></video>\r\n  );\r\n}\r\n//   <button onClick={addToLS}>Click to add!</button>\r\n\r\nexport default FindCard;\r\n","import React from \"react\";\r\nimport \"./StaticCard.css\";\r\n\r\nfunction StaticCard(props) {\r\n  const cardback = props.cardback;\r\n  return (\r\n    <img\r\n      src={`img/${cardback}`}\r\n      alt={cardback}\r\n      width=\"128\"\r\n      height=\"190\"\r\n      className=\"back-face\"\r\n    ></img>\r\n  );\r\n}\r\n//   <button onClick={addToLS}>Click to add!</button>\r\n\r\nexport default StaticCard;\r\n","import React, { useEffect, useLayoutEffect } from \"react\";\r\nimport { useState } from \"react/cjs/react.development\";\r\n\r\nimport FindCard from \"../FindCard/FindCard.component\";\r\nimport StaticCard from \"../StaticCard/StaticCard.component\";\r\nimport \"./MemoryBoard.css\";\r\n\r\nfunction MemoryBoard(props) {\r\n  const [startGame, setStartGame] = useState({});\r\n  //const [score, setScore] = useState(0);\r\n  // const [flip, setFlip] = useState(false);\r\n\r\n  function getAllCards() {\r\n    const cards = { ...localStorage };\r\n\r\n    setStartGame(cards);\r\n  }\r\n\r\n  let lockBoard = false;\r\n  let firstCard, secondCard;\r\n  let hasFlippedCard = false;\r\n  let count = 0;\r\n\r\n  function flipCard() {\r\n    if (lockBoard) return;\r\n    if (this === firstCard) return;\r\n\r\n    this.classList.add(\"flip\");\r\n\r\n    if (!hasFlippedCard) {\r\n      hasFlippedCard = true;\r\n      firstCard = this;\r\n      return;\r\n    }\r\n\r\n    secondCard = this;\r\n\r\n    // if (checkForMatch()) {\r\n    //   count++;\r\n    // }\r\n    if (checkForMatch()) {\r\n      console.log(\"checkingformatch\");\r\n      // setScore(score + 1);\r\n      count++;\r\n    }\r\n    console.log(\"countINSIDE\", count);\r\n  }\r\n  console.log(\"countOutside\", count);\r\n  setTimeout(() => {\r\n    const cardsTotal = document.querySelectorAll(\".memory-card\");\r\n\r\n    // console.log(cardsTotal);\r\n    cardsTotal.forEach((card) => card.addEventListener(\"click\", flipCard));\r\n  }, 3000);\r\n  useLayoutEffect(() => {\r\n    getAllCards();\r\n  }, []);\r\n\r\n  function checkForMatch() {\r\n    let isMatch = firstCard.dataset.framework === secondCard.dataset.framework;\r\n\r\n    isMatch ? disableCards() : unflipCards();\r\n\r\n    if (isMatch == true) return true;\r\n    else return false;\r\n  }\r\n\r\n  function disableCards() {\r\n    firstCard.removeEventListener(\"click\", flipCard);\r\n    secondCard.removeEventListener(\"click\", flipCard);\r\n\r\n    resetBoard();\r\n  }\r\n\r\n  function unflipCards() {\r\n    if (firstCard && secondCard) {\r\n      lockBoard = true;\r\n    }\r\n\r\n    setTimeout(() => {\r\n      firstCard.classList.remove(\"flip\");\r\n      secondCard.classList.remove(\"flip\");\r\n      resetBoard();\r\n    }, 1500);\r\n  }\r\n  function resetBoard() {\r\n    [hasFlippedCard, lockBoard] = [false, false];\r\n    [firstCard, secondCard] = [null, null];\r\n  }\r\n\r\n  function randomNr() {\r\n    let random = Math.floor(Math.random() * 4);\r\n    return random;\r\n  }\r\n  function randomNr2() {\r\n    let random = Math.floor(Math.random() * 2 + 2);\r\n    return random;\r\n  }\r\n  return (\r\n    <div className=\"memory-game\">\r\n      {Object.keys(startGame).map((key, i) => (\r\n        <React.Fragment key={i}>\r\n          <div\r\n            className={\"memory-card order-\" + randomNr()}\r\n            data-framework={startGame[key]}\r\n          >\r\n            <FindCard art={startGame[key]} keyz={i} key={i} />\r\n            <StaticCard cardback={\"cardback.png\"} />\r\n          </div>\r\n        </React.Fragment>\r\n      ))}\r\n      {Object.keys(startGame).map((key, i) => (\r\n        <React.Fragment key={i}>\r\n          <div\r\n            className={\"memory-card order-\" + randomNr2()}\r\n            data-framework={startGame[key]}\r\n          >\r\n            <FindCard art={startGame[key]} keyz={i} key={i} />\r\n            <StaticCard cardback={\"cardback.png\"} />\r\n          </div>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoryBoard;\r\n\r\n// <button onClick={getAllCards}>Start Game</button>\r\n\r\n//  for (const key in cards) {\r\n\r\n// console.log(`${key} : ${cards[key]}`);\r\n// }\r\n\r\n// Object.keys(startGame).forEach((key, i) => {\r\n//   let randomPos = Math.floor(Math.random() * 8);\r\n//   startGame[key].style.order = randomPos;\r\n// });\r\n\r\n// cardsTotal.forEach((card) => {\r\n//   let randomPos = Math.floor(Math.random() * 4);\r\n//   // card.style.order = randomPos;\r\n//   //\r\n//   // card.className = ` .order${randomPos}`;\r\n//   // console.log(newName);\r\n//   // card.style.backgroundColor = \"red\";\r\n//   setClassNames(randomPos);\r\n//   console.log(classNames);\r\n// });\r\n\r\n// function shuffle() {\r\n//   let randomPos = Math.floor(Math.random() * 4);\r\n//   cardsTotal.forEach((card) => {\r\n//     card.classList.add(\"order-\" + `${randomPos}`);\r\n//   });\r\n//   console.log(cardsTotal);\r\n// }\r\n// shuffle();\r\n\r\n// const cardsTotal = document.querySelectorAll(\".memory-card\");\r\n","import React from \"react\";\n\nimport \"./App.css\";\n// import CardBoard from \"./Components/CardBoard/CardBoard\";\n// import StaticCard from \"./Components/StaticCard/StaticCard.component\";\nimport MemoryBoard from \"./Components/MemoryBoard/MemoryBoard.component\";\n\n// <CardBoard />\nfunction App() {\n  localStorage.setItem(\"1\", \"ballista.mp4\");\n  localStorage.setItem(\"2\", \"executioner.mp4\");\n  localStorage.setItem(\"3\", \"chironex.mp4\");\n  localStorage.setItem(\"4\", \"greatsword.mp4\");\n  localStorage.setItem(\"5\", \"ihuarraquax.mp4\");\n  localStorage.setItem(\"6\", \"regis.mp4\");\n  return (\n    <div className=\"App\">\n      <MemoryBoard />\n    </div>\n  );\n}\n\nexport default App;\n\n// <StaticCard cardback={\"cardback.png\"} />\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}