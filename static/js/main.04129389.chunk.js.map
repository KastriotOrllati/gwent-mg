{"version":3,"sources":["Components/FindCard/FindCard.component.jsx","Components/StaticCard/StaticCard.component.jsx","Components/MemoryBoard/MemoryBoard.component.jsx","Components/Card/Card.component.jsx","Utils/CARD_DATA.js","Components/SelectCards/SelectCards.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["FindCard","props","art","className","src","preload","autoPlay","loop","muted","width","height","StaticCard","cardback","style","styles","alt","MemoryBoard","refresh","refreshFunk","useState","startGame","setStartGame","score","setScore","randomNr","setRandomNr","victory","setVictory","useLayoutEffect","cards","localStorage","array","Object","values","getAllCards","random","Array","from","length","Math","floor","firstCard","secondCard","lockBoard","hasFlippedCard","flipCard","this","classList","add","dataset","framework","removeEventListener","resetBoard","match","Audio","volume","play","console","log","setTimeout","remove","unflipCards","checkForMatch","document","querySelectorAll","forEach","card","addEventListener","id","onClick","map","Fragment","indexOf","Card","key","keyz","removeCard","removeFunk","addCard","addFunk","hide","CARD_INFO","name","SelectCards","setCards","setPlay","localStorageRefresh","allCards","RemoveCard","removeItem","filter","CardData","AddCard","setItem","p","App","setCardback","active","setActive","e","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.04129389.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./FindCard.css\";\r\n\r\nfunction FindCard(props) {\r\n  const art = props.art;\r\n  // console.log(\"art\", art);\r\n  return (\r\n    <video\r\n      className=\"front-face\"\r\n      src={`img/video/${art}`}\r\n      preload=\"true\"\r\n      autoPlay\r\n      loop\r\n      muted\r\n      width=\"128\"\r\n      height=\"190\"\r\n    ></video>\r\n  );\r\n}\r\n//   <button onClick={addToLS}>Click to add!</button>\r\n\r\nexport default FindCard;\r\n","import React from \"react\";\r\nimport \"./StaticCard.css\";\r\n\r\nfunction StaticCard(props) {\r\n  const cardback = props.cardback;\r\n  const style = props.styles;\r\n  return (\r\n    <img\r\n      src={`img/${cardback}`}\r\n      alt={cardback}\r\n      width=\"128px\"\r\n      height=\"190px\"\r\n      className={style ? style : \"back-face\"}\r\n    ></img>\r\n  );\r\n}\r\n//   <button onClick={addToLS}>Click to add!</button>\r\n\r\nexport default StaticCard;\r\n","import React, { useLayoutEffect, useState } from \"react\";\r\n\r\nimport FindCard from \"../FindCard/FindCard.component\";\r\nimport StaticCard from \"../StaticCard/StaticCard.component\";\r\nimport \"./MemoryBoard.css\";\r\n\r\nfunction MemoryBoard(props) {\r\n  let cardback = props.cardback;\r\n  let refresh = props.refreshFunk;\r\n\r\n  const [startGame, setStartGame] = useState([]);\r\n  let [score, setScore] = useState(0);\r\n  const [randomNr, setRandomNr] = useState([]);\r\n  const [victory, setVictory] = useState(false);\r\n\r\n  function getAllCards() {\r\n    const cards = { ...localStorage };\r\n\r\n    const array = Object.values(cards);\r\n\r\n    setStartGame(array);\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    getAllCards();\r\n\r\n    const random = Array.from({ length: 6 }, () =>\r\n      Math.floor(Math.random() * 6)\r\n    );\r\n\r\n    setRandomNr(random);\r\n  }, []);\r\n\r\n  let lockBoard = false;\r\n  let firstCard, secondCard;\r\n  let hasFlippedCard = false;\r\n  // var count = 0;\r\n\r\n  function flipCard() {\r\n    if (lockBoard) return;\r\n    if (this === firstCard) return;\r\n\r\n    this.classList.add(\"flip\");\r\n\r\n    if (!hasFlippedCard) {\r\n      hasFlippedCard = true;\r\n      firstCard = this;\r\n      return;\r\n    }\r\n\r\n    secondCard = this;\r\n\r\n    checkForMatch();\r\n  }\r\n\r\n  setTimeout(() => {\r\n    const cardsTotal = document.querySelectorAll(\".memory-card\");\r\n\r\n    cardsTotal.forEach((card) => card.addEventListener(\"click\", flipCard));\r\n  }, 1000);\r\n\r\n  function checkForMatch() {\r\n    let isMatch = firstCard.dataset.framework === secondCard.dataset.framework;\r\n\r\n    if (isMatch === true) {\r\n      disableCards();\r\n      setScore(score + 1);\r\n      let match = new Audio(\"audios/match.mp3\");\r\n      match.volume = 0.1;\r\n      match.play();\r\n\r\n      if (score + 1 === startGame.length) {\r\n        console.log(\"you won!\");\r\n        const victory = new Audio(\"audios/victory.mp3\");\r\n        victory.volume = 0.2;\r\n        victory.play();\r\n        setVictory(true);\r\n      }\r\n    } else unflipCards();\r\n  }\r\n\r\n  function disableCards() {\r\n    firstCard.removeEventListener(\"click\", flipCard);\r\n    secondCard.removeEventListener(\"click\", flipCard);\r\n\r\n    resetBoard();\r\n  }\r\n\r\n  function unflipCards() {\r\n    if (firstCard && secondCard) {\r\n      lockBoard = true;\r\n    }\r\n\r\n    setTimeout(() => {\r\n      firstCard.classList.remove(\"flip\");\r\n      secondCard.classList.remove(\"flip\");\r\n      resetBoard();\r\n    }, 1000);\r\n  }\r\n  function resetBoard() {\r\n    [hasFlippedCard, lockBoard] = [false, false];\r\n    [firstCard, secondCard] = [null, null];\r\n  }\r\n\r\n  return (\r\n    <div className=\"memoryBoard\" key={randomNr}>\r\n      <div id=\"scoreHolder\">\r\n        Your Score: {score}\r\n        <button className=\"resetButton\" onClick={refresh}>\r\n          Start a new game with new cards! &#128260;\r\n        </button>\r\n        {victory ? <div className=\"winning\">You won!!!</div> : null}\r\n      </div>\r\n      {startGame.length === 0 ? (\r\n        <div className=\"hint\">Add some cards first!</div>\r\n      ) : (\r\n        <div className=\"memory-game\">\r\n          {startGame?.map((card) => (\r\n            <React.Fragment key={card}>\r\n              <div\r\n                className={\r\n                  \"memory-card order-\" + randomNr[startGame.indexOf(card)]\r\n                }\r\n                data-framework={card}\r\n              >\r\n                <FindCard art={card} key={card} />\r\n                <StaticCard cardback={cardback} />\r\n              </div>\r\n            </React.Fragment>\r\n          ))}\r\n          {startGame.map((card) => (\r\n            <React.Fragment key={card}>\r\n              <div\r\n                className={\r\n                  \"memory-card order-\" + randomNr[startGame.indexOf(card) / 2]\r\n                }\r\n                data-framework={card}\r\n              >\r\n                <FindCard art={card} key={card} />\r\n                <StaticCard cardback={cardback} />\r\n              </div>\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoryBoard;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  const card = props.card;\r\n  const key = props.keyz;\r\n  const removeCard = props.removeFunk;\r\n  const addCard = props.addFunk;\r\n  const hide = props.hide;\r\n\r\n  return (\r\n    <div className=\"cardBody\">\r\n      <div className=\"artHolder\">\r\n        <video\r\n          src={`img/video/${card}`}\r\n          preload=\"true\"\r\n          autoPlay\r\n          loop\r\n          muted\r\n          width=\"126\"\r\n          height=\"189\"\r\n        ></video>\r\n      </div>\r\n      <div className={`showButtons` + hide}>\r\n        <button onClick={() => addCard(key, card)}>Add to play</button>\r\n        <button onClick={() => removeCard(key, card)}>Remove </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n//   <button onClick={addToLS}>Click to add!</button>\r\n\r\nexport default Card;\r\n","const CARD_INFO = [\r\n  {\r\n    id: 1,\r\n    name: \"ballista.mp4\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"executioner.mp4\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"chironex.mp4\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"greatsword.mp4\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"ihuarraquax.mp4\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"regis.mp4\",\r\n  },\r\n];\r\n\r\nexport default CARD_INFO;\r\n","import React, { useState, useLayoutEffect } from \"react\";\r\nimport \"./SelectCards.css\";\r\n\r\nimport Card from \"../Card/Card.component\";\r\n\r\nimport CardData from \"../../Utils/CARD_DATA\";\r\n\r\n//make an array and give the array to Card comp\r\n\r\nfunction SelectCards(props) {\r\n  const [cards, setCards] = useState([]);\r\n  const [play, setPlay] = useState([]);\r\n  // localStorage.setItem(\"1\", \"ballista.mp4\");\r\n  // localStorage.setItem(\"2\", \"executioner.mp4\");\r\n  // localStorage.setItem(\"3\", \"chironex.mp4\");\r\n  // localStorage.setItem(\"4\", \"greatsword.mp4\");\r\n  // localStorage.setItem(\"5\", \"ihuarraquax.mp4\");\r\n  // localStorage.setItem(\"6\", \"regis.mp4\");\r\n\r\n  // function getAllCards() {\r\n  //   const allCards = { ...localStorage };\r\n  //   //const array = Object.values(cards);\r\n\r\n  //   setCards(allCards);\r\n  // }\r\n  // window.addEventListener(\"storage\", () => {\r\n  //   console.log(play);\r\n  // });\r\n\r\n  function localStorageRefresh() {\r\n    const allCards = { ...localStorage };\r\n    const array = Object.values(allCards);\r\n    setPlay(array);\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    // getAllCards();\r\n    setCards(CardData);\r\n    localStorageRefresh();\r\n  }, []);\r\n\r\n  function RemoveCard(key, card) {\r\n    localStorage.removeItem(key, card);\r\n    console.log(\"key\", key);\r\n    console.log(\"card\", card);\r\n    setPlay(play.filter((card) => card[key + 1] !== key + 1));\r\n    localStorageRefresh();\r\n  }\r\n\r\n  const AddCard = (key, card) => {\r\n    localStorage.setItem(key, card);\r\n    setPlay([...play, card]);\r\n    localStorageRefresh();\r\n  };\r\n  console.log(\"setPlayArray\", play);\r\n  return (\r\n    <div>\r\n      <div className=\"cardSelector\">\r\n        <div className=\"poolCards\">\r\n          <h3>Select the cards you want to play with:</h3>\r\n          <div className=\"allCards\">\r\n            {cards.map((card) => (\r\n              <Card\r\n                card={card.name}\r\n                key={card.id}\r\n                keyz={card.id}\r\n                removeFunk={RemoveCard}\r\n                addFunk={AddCard}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <div className=\"myCards\">\r\n        <h1>Your Cards to play with</h1>\r\n        <h2>You selected {play.length} out of 6!</h2>\r\n        <div className=\"myCardsSelected\">\r\n          {play.map((p) => (\r\n            <Card card={p} key={play.indexOf(p)} hide={\"hide\"} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectCards;\r\n\r\n// {Object.keys(cards).map((key, i) => (\r\n//   <Card card={cards[key]} key={i} keyz={i + 1} />\r\n// ))}\r\n\r\n// {Object.keys(cards).map((key, i) => (\r\n//   <Card card={cards[key]} key={i} keyz={i + 1} />\r\n// ))}\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>hello from select</h1>\r\n//       <div className=\"cardSelector\">\r\n//         {cards.map((card) => (\r\n//           <div key={card.id}>\r\n//             <Card card={card.name} key={card.id} keyz={card.id} />\r\n\r\n//             <button onClick={() => AddCard(card.id, card.name)}>\r\n//               Add to play\r\n//             </button>\r\n//             <button onClick={() => RemoveCard(card.id, card.name)}>\r\n//               Remove Card\r\n//             </button>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//       <div>Cards in play right now {length}</div>\r\n//       <button onClick={showAllCards}>Show all Cards</button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default SelectCards;\r\n\r\n// // {Object.keys(cards).map((key, i) => (\r\n// //   <Card card={cards[key]} key={i} keyz={i + 1} />\r\n// // ))}\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./App.css\";\r\n// import CardBoard from \"./Components/CardBoard/CardBoard\";\r\n// import StaticCard from \"./Components/StaticCard/StaticCard.component\";\r\nimport MemoryBoard from \"./Components/MemoryBoard/MemoryBoard.component\";\r\nimport SelectCards from \"./Components/SelectCards/SelectCards.component\";\r\nimport StaticCard from \"./Components/StaticCard/StaticCard.component\";\r\n\r\n// <CardBoard />\r\nfunction App() {\r\n  const [cardback, setCardback] = useState(\"cardback.png\");\r\n  const [active, setActive] = useState(\"homepage\");\r\n  // localStorage.setItem(\"1\", \"ballista.mp4\");\r\n  // localStorage.setItem(\"2\", \"executioner.mp4\");\r\n  // localStorage.setItem(\"3\", \"chironex.mp4\");\r\n  // localStorage.setItem(\"4\", \"greatsword.mp4\");\r\n  // localStorage.setItem(\"5\", \"ihuarraquax.mp4\");\r\n  // localStorage.setItem(\"6\", \"regis.mp4\");\r\n\r\n  const refresh = (e) => {\r\n    e.preventDefault();\r\n    setActive(\"selectCards\");\r\n  };\r\n\r\n  console.log(cardback);\r\n  return (\r\n    <div className=\"App\">\r\n      <nav>\r\n        <div className=\"navButtons\">\r\n          <div className=\"button-container\">\r\n            <div onClick={() => setActive(\"homepage\")} className=\"buttonText\">\r\n              Homepage\r\n            </div>\r\n            <img\r\n              src=\"https://trendygwentleman.com/static/img/borders/38057.png\"\r\n              alt=\"border\"\r\n              className=\"imgName\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"navButtons\">\r\n          <div className=\"button-container\">\r\n            <div\r\n              onClick={() => setActive(\"selectCards\")}\r\n              className=\"buttonText\"\r\n            >\r\n              Select Cards\r\n            </div>\r\n            <img\r\n              src=\"https://trendygwentleman.com/static/img/borders/38057.png\"\r\n              alt=\"border\"\r\n              className=\"imgName\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"navButtons\">\r\n          <div className=\"button-container\">\r\n            <div onClick={() => setActive(\"playgame\")} className=\"buttonText\">\r\n              Play the game\r\n            </div>\r\n            <img\r\n              src=\"https://trendygwentleman.com/static/img/borders/38057.png\"\r\n              alt=\"border\"\r\n              className=\"imgName\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      {active === \"homepage\" && (\r\n        <div className=\"homepage\">\r\n          <div className=\"infoDiv\">Select Your Cardback</div>\r\n          <div className=\"cardbacks\">\r\n            <div\r\n              className=\"hoverDiv\"\r\n              onClick={(e) => setCardback(\"cardback.png\")}\r\n            >\r\n              <StaticCard cardback={\"cardback.png\"} styles={\"newStyle\"} />\r\n            </div>\r\n            <div\r\n              className=\"hoverDiv\"\r\n              onClick={(e) => setCardback(\"cardback1.png\")}\r\n            >\r\n              <StaticCard cardback={\"cardback1.png\"} styles={\"newStyle\"} />\r\n            </div>\r\n\r\n            <div\r\n              className=\"hoverDiv\"\r\n              onClick={(e) => setCardback(\"cardback2.png\")}\r\n            >\r\n              <StaticCard cardback={\"cardback2.png\"} styles={\"newStyle\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {active === \"playgame\" && (\r\n        <MemoryBoard cardback={cardback} refreshFunk={refresh} />\r\n      )}\r\n      {active === \"selectCards\" && <SelectCards />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n// <MemoryBoard />\r\n\r\n// <StaticCard cardback={\"cardback.png\"} />\r\n\r\n//// \"homepage\":\"https://kastriotorllati.github.io/gwent-mg/\",\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}